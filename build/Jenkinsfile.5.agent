@Library("cicd@develop") _cicd
@Library("custom@develop") _custom

import static groovy.json.JsonOutput.*

// Global settings. Can be overwritten locally if needed.
def (cicd, log) = cicdByTag()

pipeline {
  options {
    buildDiscarder(
      logRotator(
        artifactDaysToKeepStr : cicd.job.options.logRotator.artifactDaysToKeepStr,
        artifactNumToKeepStr  : cicd.job.options.logRotator.artifactNumToKeepStr,
        daysToKeepStr         : cicd.job.options.logRotator.daysToKeepStr,
        numToKeepStr          : cicd.job.options.logRotator.numToKeepStr
      )
    )
    disableConcurrentBuilds()
    disableResume()
    // skipDefaultCheckout()
    timeout(cicd.job.options.timeout)
    timestamps()
  }

  agent {
    kubernetes(cicd.job.environment.agent.k8)
  }

  stages {
    stage('Build1') {
      steps {
        sh 'echo "hello world1" '

        script {
          log.info("Info from pipeline")
          // if (env.CICD_DEBUG == '1') {
            debugInfo = sh(script: "printenv | sort", returnStdout: true)
            echo "DEBUG: Pipeline Environment\n${debugInfo}"
          // }
          log.debug("Final CICD Configuration\n" + prettyPrint(toJson(cicd)))
          log.debug("Final CICD Environment\n" + sh(script: "printenv | sort", returnStdout: true))
        }
      }
    }
  }
}

