pipeline {

  options {
    buildDiscarder(logRotator(numToKeepStr: '3', artifactNumToKeepStr: '3'))
    // timestamps()
  }

  environment {
    // GIT environment variables
    GIT_COMMIT_SHORT = GIT_COMMIT.trim().take(7)
    GIT_AUTHOR_NAME = sh(returnStdout: true, script: 'git show -s --pretty=%an').trim()
    LAST_GIT_BUILD_TAG = sh(returnStdout: true, script: 'git tag | sort | egrep "^v-" | tail -1').trim()
    LAST_GIT_BUILD_TAG_COMMIT = sh(returnStdout: true, script: "git rev-list -1 ${LAST_GIT_BUILD_TAG}").trim()
    LAST_GIT_DEPLOY_TAG = sh(returnStdout: true, script: 'git tag | sort | egrep "^d-" | tail -1').trim()
    LAST_GIT_DEPLOY_TAG_COMMIT = sh(returnStdout: true, script: "git rev-list -1 ${LAST_GIT_DEPLOY_TAG}").trim()

    registry = "jmaclean/docker_hub_account/poc-trigger-by-tag"
    registryCredential = 'futurice-jmaclean-docker'
    dockerImage = ''
  }
  agent any
  stages {
    stage ('Process all environment variables') {
      steps {
        sh """
          cat << EOF
----- GIT ----- GIT ----- GIT ----- GIT ----- GIT -----
GIT_COMMIT: ${GIT_COMMIT}
GIT_COMMIT_SHORT: ${GIT_COMMIT}
GIT_BRANCH: ${GIT_BRANCH}
GIT_PREVIOUS_COMMIT: ${GIT_PREVIOUS_COMMIT}
GIT_PREVIOUS_SUCCESSFUL_COMMIT: ${GIT_PREVIOUS_SUCCESSFUL_COMMIT}
GIT_URL: ${GIT_URL}
GIT_AUTHOR_NAME: ${GIT_AUTHOR_NAME}

LAST_GIT_BUILD_TAG: ${LAST_GIT_BUILD_TAG}
LAST_GIT_BUILD_TAG_COMMIT: ${LAST_GIT_BUILD_TAG_COMMIT}
LAST_GIT_DEPLOY_TAG: ${LAST_GIT_DEPLOY_TAG}
LAST_GIT_DEPLOY_TAG_COMMIT: ${LAST_GIT_DEPLOY_TAG_COMMIT}
EOF
        """
      }
    }
    stage ('Close-out') {
      steps {
        sh 'echo HERE'
      }
    }
  }
}
