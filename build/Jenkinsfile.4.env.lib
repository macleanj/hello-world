// Installed plugins:
// Console debugging
// - timestamps
// GitHub intergation
// - Pipeline: GitHub
// - Basic Branch Build Strategies Plugin
// Config
// - Add label "master" to master node. Enhance #executers: 5

// ------------------------
// Shared Library Functions
// ------------------------
// Implicitly loaded in the project Folder

def debugInfo
def g = globalVars()
// g.buildThrottle = 1

// Kubernetes parameters
def _kubernetesBuilder

// OpenShift parameters
def _openshiftBuilder


pipeline {

  // ******************************************************
  // ********************** Triggers **********************
  // Not working on multibranch
  // triggers {
  //   pollSCM( (BRANCH_NAME == 'master' || BRANCH_NAME == 'develop') ? '* * * * *' : '') /* default: poll once a minute */
  // }
  // triggers {
  //   pollSCM('* * * * *') /* default: poll once a minute */
  // }
  // // ********************** Triggers **********************
  // ******************************************************

  options {
    // skipDefaultCheckout()
    disableConcurrentBuilds()
    buildDiscarder(
      logRotator(
        artifactDaysToKeepStr: '', 
        artifactNumToKeepStr: '5', 
        daysToKeepStr: '', 
        numToKeepStr: '5'
      )
    )
    timestamps()
  }

  environment {
    GIT_AUTHOR_NAME = sh(returnStdout: true, script: 'git show -s --pretty=%an').trim()
  }

  // ****************************************************
  // ********************** Agents **********************
  // None. Set per stage?
  // agent none

  // Any
  agent any

  // Fixed lable
  // agent {
  //   label 'docker'
  // }

  // Kubernetes fixed podTemplate
  // agent {
  //   kubernetes {
  //     label 'jnlp'
  //     cloud 'kubernetes'
  //     // defaultContainer 'jenkins-builder'
  //     // instanceCap 1
  //     // yamlFile "build/k8/build-pod-img.yml"
  //     yamlFile "build/k8/build-pod-img.yml"
  //   }
  // }

  // Kubernetes merged podTemplate via library
  // agent {
  //   // Mind the _ (underscore) in the definition. Containers themselves will have the _ exchanged for a -
  //   kubernetes(k8sagent(name: 'base+s_micro', label: 'jnlp', cloud: 'kubernetes'))
  // }
  // // ********************** Agents **********************
  // ****************************************************

  // Notes
  // Branches should run otherwise tags get orphaned
  // master|develop|PR-.*|refs\/tags\/.*
  // Filter by name (with regular expression): master|develop|PR-.*|.*tags.*|feature.*|.*RELEASE OR ^((?!master).)*$|^((?!develop).)*$
  // when { tag "release-*" }
  // when { not { branch 'master' } }
  // when { branch "feature/*" }
  // when { changeRequest() }.
  // https://jenkins.io/doc/book/pipeline/syntax/#when
  stages {
    stage ('Set environment') {
      agent { label 'master' }
      when {
        beforeAgent true
        expression { BUILD_NUMBER.toInteger() <= g.buildThrottle }
      }
      environment {
        TMP_TAGS_NAME = "${TAG_NAME ? TAG_NAME : ''}"
        TMP_CHANGE_ID = "${CHANGE_ID ? CHANGE_ID : ''}"
        WORKSPACE_BASE_DIR = sh(returnStdout: true, script: "echo ${WORKSPACE} | sed -e 's?.*/workspace/??g' | sed -e 's?@.*/*??g'").trim()
        WORKSPACE_LIBS = sh(returnStdout: true, script: "[ -d ${WORKSPACE}/../workspace@libs ] && echo \"${WORKSPACE}/../workspace@libs\" || echo \"${WORKSPACE}/../${WORKSPACE_BASE_DIR}@libs\"").trim()
        PREP_LOAD_ENV = sh(returnStdout: false, script: "${WORKSPACE_LIBS}/cicd/resources/com/cicd/jenkins/prepEnv.sh -build_number ${BUILD_NUMBER} -git_commit ${GIT_COMMIT} -tag_name ${TMP_TAGS_NAME} -change_id ${TMP_CHANGE_ID} > /dev/null 2>&1")
      }
      steps {
        sh 'echo "PRE: Environment"'
        sh 'printenv | sort'

        load "${WORKSPACE_LIBS}/cicd/resources/com/cicd/jenkins/files/env.groovy"
        script {
          // _github = new Github(this)
          // _builder = new OpenShiftBuilder(this)

          if (env.CICD_DEBUG == '1') {
            debugInfo = sh(script: "printenv | sort", returnStdout: true)
            echo "DEBUG: Environment\n${debugInfo}"
          }
        }
      }
    }
  }
}
